//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GDMVisualization.Web.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperimentGraph", ReplyAction="http://tempuri.org/IService1/GetExperimentGraphResponse")]
        string GetExperimentGraph();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSessionVariable", ReplyAction="http://tempuri.org/IService1/GetSessionVariableResponse")]
        string GetSessionVariable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSolutionGraph", ReplyAction="http://tempuri.org/IService1/GetSolutionGraphResponse")]
        byte[] GetSolutionGraph();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUseSolutionGraph", ReplyAction="http://tempuri.org/IService1/GetUseSolutionGraphResponse")]
        string GetUseSolutionGraph();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCurrentExperimentID", ReplyAction="http://tempuri.org/IService1/GetCurrentExperimentIDResponse")]
        int GetCurrentExperimentID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertIntoExperimentActions", ReplyAction="http://tempuri.org/IService1/InsertIntoExperimentActionsResponse")]
        bool InsertIntoExperimentActions(int ExperimentID, int PersonID, string VertexID, string Color, System.DateTime EventTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddParticipant", ReplyAction="http://tempuri.org/IService1/AddParticipantResponse")]
        int AddParticipant(object turkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSessionVariable", ReplyAction="http://tempuri.org/IService1/setSessionVariableResponse")]
        object setSessionVariable(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertExperimentGraph", ReplyAction="http://tempuri.org/IService1/InsertExperimentGraphResponse")]
        int InsertExperimentGraph(string graph_xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SolvedProblemGraph", ReplyAction="http://tempuri.org/IService1/SolvedProblemGraphResponse")]
        bool SolvedProblemGraph(int ParticipantID, bool Solved, System.DateTime SolvedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SolutionAcceptancePartial", ReplyAction="http://tempuri.org/IService1/SolutionAcceptancePartialResponse")]
        bool SolutionAcceptancePartial(int ParticipantID, int ExperimentID, System.DateTime Date, bool AcceptedSolution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PerformBulkCopy", ReplyAction="http://tempuri.org/IService1/PerformBulkCopyResponse")]
        bool PerformBulkCopy();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GDMVisualization.Web.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GDMVisualization.Web.ServiceReference1.IService1>, GDMVisualization.Web.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetExperimentGraph() {
            return base.Channel.GetExperimentGraph();
        }
        
        public string GetSessionVariable() {
            return base.Channel.GetSessionVariable();
        }
        
        public byte[] GetSolutionGraph() {
            return base.Channel.GetSolutionGraph();
        }
        
        public string GetUseSolutionGraph() {
            return base.Channel.GetUseSolutionGraph();
        }
        
        public int GetCurrentExperimentID() {
            return base.Channel.GetCurrentExperimentID();
        }
        
        public bool InsertIntoExperimentActions(int ExperimentID, int PersonID, string VertexID, string Color, System.DateTime EventTime) {
            return base.Channel.InsertIntoExperimentActions(ExperimentID, PersonID, VertexID, Color, EventTime);
        }
        
        public int AddParticipant(object turkId) {
            return base.Channel.AddParticipant(turkId);
        }
        
        public object setSessionVariable(string key, string value) {
            return base.Channel.setSessionVariable(key, value);
        }
        
        public int InsertExperimentGraph(string graph_xml) {
            return base.Channel.InsertExperimentGraph(graph_xml);
        }
        
        public bool SolvedProblemGraph(int ParticipantID, bool Solved, System.DateTime SolvedTime) {
            return base.Channel.SolvedProblemGraph(ParticipantID, Solved, SolvedTime);
        }
        
        public bool SolutionAcceptancePartial(int ParticipantID, int ExperimentID, System.DateTime Date, bool AcceptedSolution) {
            return base.Channel.SolutionAcceptancePartial(ParticipantID, ExperimentID, Date, AcceptedSolution);
        }
        
        public bool PerformBulkCopy() {
            return base.Channel.PerformBulkCopy();
        }
    }
}
